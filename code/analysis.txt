Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 39.19      2.29     2.29 38804685     0.00     0.00  number_of_bits
 28.22      3.93     1.65 25212492     0.00     0.00  number_of_bits
 10.63      4.55     0.62   418690     0.00     0.00  reload_occupancy
  5.32      4.86     0.31   404821     0.00     0.00  note_position
  4.12      5.10     0.24   418692     0.00     0.00  reload_attacks
  1.97      5.21     0.12 25506234     0.00     0.00  first_index
  1.37      5.29     0.08  1255490     0.00     0.00  put_bishop_attacks
  1.11      5.36     0.07 38804685     0.00     0.00  first_index
  0.69      5.40     0.04  1255985     0.00     0.00  put_rook_attacks
  0.69      5.44     0.04   404926     0.00     0.00  maj_min_max
  0.60      5.47     0.04 32785202     0.00     0.00  loop_condition
  0.60      5.51     0.04                             from_U64_to_list
  0.51      5.54     0.03 16275873     0.00     0.00  check_restriction
  0.51      5.57     0.03  2614030     0.00     0.00  rank_attack
  0.51      5.60     0.03        1     0.03     0.03  get_number_of_position
  0.43      5.62     0.03  7532406     0.00     0.00  add_attack_and_xray
  0.34      5.64     0.02 15395952     0.00     0.00  pinned_restriction
  0.34      5.67     0.02 10062544     0.00     0.00  diagonal_attack
  0.34      5.68     0.02  2614030     0.00     0.00  file_attack
  0.34      5.71     0.02   404925     0.00     0.00  add_brother
  0.34      5.72     0.02   107648     0.00     0.00  set_occupancy
  0.34      5.75     0.02        1     0.02     5.64  create_tree_with_alpha_beta
  0.26      5.76     0.01 16694670     0.00     0.00  is_attacked
  0.26      5.78     0.01 10164075     0.00     0.00  add_move
  0.26      5.79     0.01  5020776     0.00     0.00  diagonal_xray_attack
  0.26      5.80     0.01       64     0.00     0.00  king_attack
  0.17      5.82     0.01 15064812     0.00     0.00  add_attack
  0.09      5.82     0.01  1255815     0.00     0.00  rank_xray_attack
  0.09      5.83     0.01  1255194     0.00     0.00  opponent_bishop_attack
  0.09      5.83     0.01                             note_position_with_model
  0.00      5.83     0.00  1255815     0.00     0.00  file_xray_attack
  0.00      5.83     0.00  1255815     0.00     0.00  opponent_rook_attack
  0.00      5.83     0.00   464506     0.00     0.00  add_bit2
  0.00      5.83     0.00   418690     0.00     0.00  make_move
  0.00      5.83     0.00   418690     0.00     0.00  malloc_moves
  0.00      5.83     0.00   418689     0.00     0.00  malloc_game
  0.00      5.83     0.00   418689     0.00     0.00  malloc_information
  0.00      5.83     0.00   418688     0.00     0.00  copy_board
  0.00      5.83     0.00   418688     0.00     0.00  copy_occupancy
  0.00      5.83     0.00   418688     0.00     0.00  copy_state
  0.00      5.83     0.00   102400     0.00     0.00  rook_attack_on_board
  0.00      5.83     0.00    22177     0.00     0.00  get_piece_from_position
  0.00      5.83     0.00    13763     0.00     0.00  free_moves
  0.00      5.83     0.00     5248     0.00     0.00  bishop_attack_on_board
  0.00      5.83     0.00      192     0.00     0.00  case_vers_pixel
  0.00      5.83     0.00      128     0.00     0.00  pawn_attack
  0.00      5.83     0.00      128     0.00     0.00  pawn_movement
  0.00      5.83     0.00       96     0.00     0.00  draw_piece
  0.00      5.83     0.00       96     0.00     0.00  first_index
  0.00      5.83     0.00       96     0.00     0.00  from_int_to_piece
  0.00      5.83     0.00       96     0.00     0.00  number_of_bits
  0.00      5.83     0.00       64     0.00     0.00  bishop_attack
  0.00      5.83     0.00       64     0.00     0.00  knight_attack
  0.00      5.83     0.00       64     0.00     0.00  malloc_bishop
  0.00      5.83     0.00       64     0.00     0.00  malloc_rook
  0.00      5.83     0.00       64     0.00     0.00  rook_attack
  0.00      5.83     0.00       32     0.00     0.00  add_bit
  0.00      5.83     0.00        8     0.00     0.00  pixel_vers_case
  0.00      5.83     0.00        5     0.00     0.00  get_mouse_click
  0.00      5.83     0.00        4     0.00     0.00  in_board
  0.00      5.83     0.00        3     0.00     0.00  draw_all_pieces
  0.00      5.83     0.00        3     0.00     0.00  draw_board
  0.00      5.83     0.00        3     0.00     0.00  get_movement
  0.00      5.83     0.00        2     0.00     0.00  get_move
  0.00      5.83     0.00        2     0.00     0.00  load_magic_numbers
  0.00      5.83     0.00        2     0.00     0.00  set_value
  0.00      5.83     0.00        1     0.00     0.00  create_window
  0.00      5.83     0.00        1     0.00     0.00  from_fen_to_bitboard
  0.00      5.83     0.00        1     0.00     0.00  get_best_move
  0.00      5.83     0.00        1     0.00     5.79  init_game
  0.00      5.83     0.00        1     0.00     0.12  init_pieces_attacks
  0.00      5.83     0.00        1     0.00     0.01  load_bishop_squares
  0.00      5.83     0.00        1     0.00     0.10  load_rook_squares

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.17% of 5.83 seconds

index % time    self  children    called     name
                0.00    5.79       1/1           main [2]
[1]     99.3    0.00    5.79       1         init_game [1]
                0.02    5.62       1/1           create_tree_with_alpha_beta [3]
                0.00    0.12       1/1           init_pieces_attacks [11]
                0.03    0.00       1/1           get_number_of_position [26]
                0.00    0.00       3/418692      reload_attacks [7]
                0.00    0.00       1/418690      reload_occupancy [10]
                0.00    0.00       3/3           draw_board [67]
                0.00    0.00       3/3           get_movement [68]
                0.00    0.00       2/2           set_value [71]
                0.00    0.00       2/2           get_move [69]
                0.00    0.00       2/418690      make_move [43]
                0.00    0.00       1/1           create_window [72]
                0.00    0.00       1/418690      malloc_moves [44]
                0.00    0.00       1/1           from_fen_to_bitboard [73]
                0.00    0.00       1/418689      malloc_information [46]
                0.00    0.00       1/418689      malloc_game [45]
                0.00    0.00       1/1           get_best_move [74]
-----------------------------------------------
                                                 <spontaneous>
[2]     99.3    0.00    5.79                 main [2]
                0.00    5.79       1/1           init_game [1]
-----------------------------------------------
                              418688             create_tree_with_alpha_beta [3]
                0.02    5.62       1/1           init_game [1]
[3]     96.7    0.02    5.62       1+418688  create_tree_with_alpha_beta [3]
                0.31    2.35  404821/404821      note_position [4]
                0.24    2.04  418689/418692      reload_attacks [7]
                0.62    0.00  418689/418690      reload_occupancy [10]
                0.04    0.00  404926/404926      maj_min_max [21]
                0.02    0.00  404925/404925      add_brother [29]
                0.00    0.00  418689/418690      malloc_moves [44]
                0.00    0.00  418688/418688      copy_board [47]
                0.00    0.00  418688/418688      copy_state [49]
                0.00    0.00  418688/418688      copy_occupancy [48]
                0.00    0.00  418688/418690      make_move [43]
                0.00    0.00  418688/418689      malloc_information [46]
                0.00    0.00  418688/418689      malloc_game [45]
                0.00    0.00   13763/13763       free_moves [51]
                              418688             create_tree_with_alpha_beta [3]
-----------------------------------------------
                0.31    2.35  404821/404821      create_tree_with_alpha_beta [3]
[4]     45.6    0.31    2.35  404821         note_position [4]
                0.07    2.29 38804685/38804685     first_index [5]
-----------------------------------------------
                0.07    2.29 38804685/38804685     note_position [4]
[5]     40.3    0.07    2.29 38804685         first_index [5]
                2.29    0.00 38804685/38804685     number_of_bits [6]
-----------------------------------------------
                2.29    0.00 38804685/38804685     first_index [5]
[6]     39.2    2.29    0.00 38804685         number_of_bits [6]
-----------------------------------------------
                0.00    0.00       3/418692      init_game [1]
                0.24    2.04  418689/418692      create_tree_with_alpha_beta [3]
[7]     39.0    0.24    2.04  418692         reload_attacks [7]
                0.11    1.56 24254778/25506234     first_index [8]
                0.01    0.09 1255194/1255194     opponent_bishop_attack [14]
                0.08    0.00 1255490/1255490     put_bishop_attacks [15]
                0.00    0.06 1255815/1255815     opponent_rook_attack [16]
                0.03    0.01 16275873/16275873     check_restriction [18]
                0.04    0.00 1255985/1255985     put_rook_attacks [20]
                0.02    0.00 15395952/15395952     pinned_restriction [27]
                0.01    0.00 10164075/10164075     add_move [32]
                0.00    0.00  418797/16694670     is_attacked [31]
-----------------------------------------------
                0.00    0.00      64/25506234     bishop_attack [40]
                0.00    0.00      64/25506234     rook_attack [41]
                0.00    0.00    5248/25506234     bishop_attack_on_board [39]
                0.00    0.01  102400/25506234     rook_attack_on_board [36]
                0.01    0.07 1143680/25506234     set_occupancy [13]
                0.11    1.56 24254778/25506234     reload_attacks [7]
[8]     30.2    0.11    1.64 25506234         first_index [8]
                1.64    0.00 25212364/25212492     number_of_bits [9]
-----------------------------------------------
                0.00    0.00      64/25212492     load_bishop_squares [37]
                0.00    0.00      64/25212492     load_rook_squares [12]
                1.64    0.00 25212364/25212492     first_index [8]
[9]     28.2    1.64    0.00 25212492         number_of_bits [9]
-----------------------------------------------
                0.00    0.00       1/418690      init_game [1]
                0.62    0.00  418689/418690      create_tree_with_alpha_beta [3]
[10]    10.6    0.62    0.00  418690         reload_occupancy [10]
-----------------------------------------------
                0.00    0.12       1/1           init_game [1]
[11]     2.1    0.00    0.12       1         init_pieces_attacks [11]
                0.00    0.10       1/1           load_rook_squares [12]
                0.01    0.00      64/64          king_attack [33]
                0.00    0.01       1/1           load_bishop_squares [37]
                0.00    0.00     128/128         pawn_attack [53]
                0.00    0.00     128/128         pawn_movement [54]
                0.00    0.00      64/64          knight_attack [59]
-----------------------------------------------
                0.00    0.10       1/1           init_pieces_attacks [11]
[12]     1.8    0.00    0.10       1         load_rook_squares [12]
                0.02    0.08  102400/107648      set_occupancy [13]
                0.00    0.01  102400/102400      rook_attack_on_board [36]
                0.00    0.00      64/64          rook_attack [41]
                0.00    0.00      64/25212492     number_of_bits [9]
                0.00    0.00      64/64          malloc_rook [61]
                0.00    0.00       1/2           load_magic_numbers [70]
-----------------------------------------------
                0.00    0.00    5248/107648      load_bishop_squares [37]
                0.02    0.08  102400/107648      load_rook_squares [12]
[13]     1.7    0.02    0.08  107648         set_occupancy [13]
                0.01    0.07 1143680/25506234     first_index [8]
-----------------------------------------------
                0.01    0.09 1255194/1255194     reload_attacks [7]
[14]     1.7    0.01    0.09 1255194         opponent_bishop_attack [14]
                0.01    0.03 5020776/5020776     diagonal_xray_attack [17]
                0.02    0.01 5020776/7532406     add_attack_and_xray [23]
                0.01    0.01 5020776/10062544     diagonal_attack [19]
-----------------------------------------------
                0.08    0.00 1255490/1255490     reload_attacks [7]
[15]     1.4    0.08    0.00 1255490         put_bishop_attacks [15]
-----------------------------------------------
                0.00    0.06 1255815/1255815     reload_attacks [7]
[16]     1.1    0.00    0.06 1255815         opponent_rook_attack [16]
                0.01    0.01 1255815/1255815     rank_xray_attack [30]
                0.01    0.00 1255815/2614030     rank_attack [25]
                0.01    0.00 2511630/7532406     add_attack_and_xray [23]
                0.01    0.00 1255815/2614030     file_attack [28]
                0.00    0.01 1255815/1255815     file_xray_attack [35]
-----------------------------------------------
                0.01    0.03 5020776/5020776     opponent_bishop_attack [14]
[17]     0.8    0.01    0.03 5020776         diagonal_xray_attack [17]
                0.01    0.01 5020776/10062544     diagonal_attack [19]
                0.01    0.00 10569271/32785202     loop_condition [22]
-----------------------------------------------
                0.03    0.01 16275873/16275873     reload_attacks [7]
[18]     0.8    0.03    0.01 16275873         check_restriction [18]
                0.01    0.00 16275873/16694670     is_attacked [31]
-----------------------------------------------
                0.00    0.00   20992/10062544     bishop_attack_on_board [39]
                0.01    0.01 5020776/10062544     diagonal_xray_attack [17]
                0.01    0.01 5020776/10062544     opponent_bishop_attack [14]
[19]     0.7    0.02    0.02 10062544         diagonal_attack [19]
                0.02    0.00 22215931/32785202     loop_condition [22]
-----------------------------------------------
                0.04    0.00 1255985/1255985     reload_attacks [7]
[20]     0.7    0.04    0.00 1255985         put_rook_attacks [20]
-----------------------------------------------
                0.04    0.00  404926/404926      create_tree_with_alpha_beta [3]
[21]     0.7    0.04    0.00  404926         maj_min_max [21]
-----------------------------------------------
                0.01    0.00 10569271/32785202     diagonal_xray_attack [17]
                0.02    0.00 22215931/32785202     diagonal_attack [19]
[22]     0.6    0.04    0.00 32785202         loop_condition [22]
-----------------------------------------------
                0.01    0.00 2511630/7532406     opponent_rook_attack [16]
                0.02    0.01 5020776/7532406     opponent_bishop_attack [14]
[23]     0.6    0.03    0.01 7532406         add_attack_and_xray [23]
                0.01    0.00 15064812/15064812     add_attack [34]
-----------------------------------------------
                                                 <spontaneous>
[24]     0.6    0.04    0.00                 from_U64_to_list [24]
-----------------------------------------------
                0.00    0.00  102400/2614030     rook_attack_on_board [36]
                0.01    0.00 1255815/2614030     rank_xray_attack [30]
                0.01    0.00 1255815/2614030     opponent_rook_attack [16]
[25]     0.5    0.03    0.00 2614030         rank_attack [25]
-----------------------------------------------
                              418688             get_number_of_position [26]
                0.03    0.00       1/1           init_game [1]
[26]     0.5    0.03    0.00       1+418688  get_number_of_position [26]
                              418688             get_number_of_position [26]
-----------------------------------------------
                0.02    0.00 15395952/15395952     reload_attacks [7]
[27]     0.3    0.02    0.00 15395952         pinned_restriction [27]
-----------------------------------------------
                0.00    0.00  102400/2614030     rook_attack_on_board [36]
                0.01    0.00 1255815/2614030     file_xray_attack [35]
                0.01    0.00 1255815/2614030     opponent_rook_attack [16]
[28]     0.3    0.02    0.00 2614030         file_attack [28]
-----------------------------------------------
                0.02    0.00  404925/404925      create_tree_with_alpha_beta [3]
[29]     0.3    0.02    0.00  404925         add_brother [29]
-----------------------------------------------
                0.01    0.01 1255815/1255815     opponent_rook_attack [16]
[30]     0.3    0.01    0.01 1255815         rank_xray_attack [30]
                0.01    0.00 1255815/2614030     rank_attack [25]
-----------------------------------------------
                0.00    0.00  418797/16694670     reload_attacks [7]
                0.01    0.00 16275873/16694670     check_restriction [18]
[31]     0.3    0.01    0.00 16694670         is_attacked [31]
-----------------------------------------------
                0.01    0.00 10164075/10164075     reload_attacks [7]
[32]     0.3    0.01    0.00 10164075         add_move [32]
-----------------------------------------------
                0.01    0.00      64/64          init_pieces_attacks [11]
[33]     0.3    0.01    0.00      64         king_attack [33]
-----------------------------------------------
                0.01    0.00 15064812/15064812     add_attack_and_xray [23]
[34]     0.2    0.01    0.00 15064812         add_attack [34]
                0.00    0.00   45816/464506      add_bit2 [42]
-----------------------------------------------
                0.00    0.01 1255815/1255815     opponent_rook_attack [16]
[35]     0.2    0.00    0.01 1255815         file_xray_attack [35]
                0.01    0.00 1255815/2614030     file_attack [28]
-----------------------------------------------
                0.00    0.01  102400/102400      load_rook_squares [12]
[36]     0.2    0.00    0.01  102400         rook_attack_on_board [36]
                0.00    0.01  102400/25506234     first_index [8]
                0.00    0.00  102400/2614030     rank_attack [25]
                0.00    0.00  102400/2614030     file_attack [28]
-----------------------------------------------
                0.00    0.01       1/1           init_pieces_attacks [11]
[37]     0.1    0.00    0.01       1         load_bishop_squares [37]
                0.00    0.00    5248/107648      set_occupancy [13]
                0.00    0.00    5248/5248        bishop_attack_on_board [39]
                0.00    0.00      64/64          bishop_attack [40]
                0.00    0.00      64/25212492     number_of_bits [9]
                0.00    0.00      64/64          malloc_bishop [60]
                0.00    0.00       1/2           load_magic_numbers [70]
-----------------------------------------------
                                                 <spontaneous>
[38]     0.1    0.01    0.00                 note_position_with_model [38]
-----------------------------------------------
                0.00    0.00    5248/5248        load_bishop_squares [37]
[39]     0.0    0.00    0.00    5248         bishop_attack_on_board [39]
                0.00    0.00    5248/25506234     first_index [8]
                0.00    0.00   20992/10062544     diagonal_attack [19]
-----------------------------------------------
                0.00    0.00      64/64          load_bishop_squares [37]
[40]     0.0    0.00    0.00      64         bishop_attack [40]
                0.00    0.00      64/25506234     first_index [8]
-----------------------------------------------
                0.00    0.00      64/64          load_rook_squares [12]
[41]     0.0    0.00    0.00      64         rook_attack [41]
                0.00    0.00      64/25506234     first_index [8]
-----------------------------------------------
                0.00    0.00   45816/464506      add_attack [34]
                0.00    0.00  418690/464506      make_move [43]
[42]     0.0    0.00    0.00  464506         add_bit2 [42]
-----------------------------------------------
                0.00    0.00       2/418690      init_game [1]
                0.00    0.00  418688/418690      create_tree_with_alpha_beta [3]
[43]     0.0    0.00    0.00  418690         make_move [43]
                0.00    0.00  418690/464506      add_bit2 [42]
                0.00    0.00   22177/22177       get_piece_from_position [50]
-----------------------------------------------
                0.00    0.00       1/418690      init_game [1]
                0.00    0.00  418689/418690      create_tree_with_alpha_beta [3]
[44]     0.0    0.00    0.00  418690         malloc_moves [44]
-----------------------------------------------
                0.00    0.00       1/418689      init_game [1]
                0.00    0.00  418688/418689      create_tree_with_alpha_beta [3]
[45]     0.0    0.00    0.00  418689         malloc_game [45]
-----------------------------------------------
                0.00    0.00       1/418689      init_game [1]
                0.00    0.00  418688/418689      create_tree_with_alpha_beta [3]
[46]     0.0    0.00    0.00  418689         malloc_information [46]
-----------------------------------------------
                0.00    0.00  418688/418688      create_tree_with_alpha_beta [3]
[47]     0.0    0.00    0.00  418688         copy_board [47]
-----------------------------------------------
                0.00    0.00  418688/418688      create_tree_with_alpha_beta [3]
[48]     0.0    0.00    0.00  418688         copy_occupancy [48]
-----------------------------------------------
                0.00    0.00  418688/418688      create_tree_with_alpha_beta [3]
[49]     0.0    0.00    0.00  418688         copy_state [49]
-----------------------------------------------
                0.00    0.00   22177/22177       make_move [43]
[50]     0.0    0.00    0.00   22177         get_piece_from_position [50]
-----------------------------------------------
                0.00    0.00   13763/13763       create_tree_with_alpha_beta [3]
[51]     0.0    0.00    0.00   13763         free_moves [51]
-----------------------------------------------
                0.00    0.00     192/192         draw_all_pieces [66]
[52]     0.0    0.00    0.00     192         case_vers_pixel [52]
-----------------------------------------------
                0.00    0.00     128/128         init_pieces_attacks [11]
[53]     0.0    0.00    0.00     128         pawn_attack [53]
-----------------------------------------------
                0.00    0.00     128/128         init_pieces_attacks [11]
[54]     0.0    0.00    0.00     128         pawn_movement [54]
-----------------------------------------------
                0.00    0.00      96/96          draw_all_pieces [66]
[55]     0.0    0.00    0.00      96         draw_piece [55]
-----------------------------------------------
                0.00    0.00      96/96          draw_all_pieces [66]
[56]     0.0    0.00    0.00      96         first_index [56]
                0.00    0.00      96/96          number_of_bits [58]
-----------------------------------------------
                0.00    0.00      96/96          draw_all_pieces [66]
[57]     0.0    0.00    0.00      96         from_int_to_piece [57]
-----------------------------------------------
                0.00    0.00      96/96          first_index [56]
[58]     0.0    0.00    0.00      96         number_of_bits [58]
-----------------------------------------------
                0.00    0.00      64/64          init_pieces_attacks [11]
[59]     0.0    0.00    0.00      64         knight_attack [59]
-----------------------------------------------
                0.00    0.00      64/64          load_bishop_squares [37]
[60]     0.0    0.00    0.00      64         malloc_bishop [60]
-----------------------------------------------
                0.00    0.00      64/64          load_rook_squares [12]
[61]     0.0    0.00    0.00      64         malloc_rook [61]
-----------------------------------------------
                0.00    0.00      32/32          from_fen_to_bitboard [73]
[62]     0.0    0.00    0.00      32         add_bit [62]
-----------------------------------------------
                0.00    0.00       8/8           get_movement [68]
[63]     0.0    0.00    0.00       8         pixel_vers_case [63]
-----------------------------------------------
                0.00    0.00       5/5           get_movement [68]
[64]     0.0    0.00    0.00       5         get_mouse_click [64]
-----------------------------------------------
                0.00    0.00       4/4           get_movement [68]
[65]     0.0    0.00    0.00       4         in_board [65]
-----------------------------------------------
                0.00    0.00       3/3           draw_board [67]
[66]     0.0    0.00    0.00       3         draw_all_pieces [66]
                0.00    0.00     192/192         case_vers_pixel [52]
                0.00    0.00      96/96          first_index [56]
                0.00    0.00      96/96          from_int_to_piece [57]
                0.00    0.00      96/96          draw_piece [55]
-----------------------------------------------
                0.00    0.00       3/3           init_game [1]
[67]     0.0    0.00    0.00       3         draw_board [67]
                0.00    0.00       3/3           draw_all_pieces [66]
-----------------------------------------------
                0.00    0.00       3/3           init_game [1]
[68]     0.0    0.00    0.00       3         get_movement [68]
                0.00    0.00       8/8           pixel_vers_case [63]
                0.00    0.00       5/5           get_mouse_click [64]
                0.00    0.00       4/4           in_board [65]
-----------------------------------------------
                0.00    0.00       2/2           init_game [1]
[69]     0.0    0.00    0.00       2         get_move [69]
-----------------------------------------------
                0.00    0.00       1/2           load_bishop_squares [37]
                0.00    0.00       1/2           load_rook_squares [12]
[70]     0.0    0.00    0.00       2         load_magic_numbers [70]
-----------------------------------------------
                0.00    0.00       2/2           init_game [1]
[71]     0.0    0.00    0.00       2         set_value [71]
-----------------------------------------------
                0.00    0.00       1/1           init_game [1]
[72]     0.0    0.00    0.00       1         create_window [72]
-----------------------------------------------
                0.00    0.00       1/1           init_game [1]
[73]     0.0    0.00    0.00       1         from_fen_to_bitboard [73]
                0.00    0.00      32/32          add_bit [62]
-----------------------------------------------
                0.00    0.00       1/1           init_game [1]
[74]     0.0    0.00    0.00       1         get_best_move [74]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [34] add_attack             [51] free_moves             [44] malloc_moves
  [23] add_attack_and_xray    [24] from_U64_to_list       [61] malloc_rook
  [62] add_bit                [73] from_fen_to_bitboard    [4] note_position
  [42] add_bit2               [57] from_int_to_piece      [38] note_position_with_model
  [29] add_brother            [74] get_best_move           [6] number_of_bits
  [32] add_move               [64] get_mouse_click        [58] number_of_bits
  [40] bishop_attack          [69] get_move                [9] number_of_bits
  [39] bishop_attack_on_board [68] get_movement           [14] opponent_bishop_attack
  [52] case_vers_pixel        [26] get_number_of_position [16] opponent_rook_attack
  [18] check_restriction      [50] get_piece_from_position [53] pawn_attack
  [47] copy_board             [65] in_board               [54] pawn_movement
  [48] copy_occupancy          [1] init_game              [27] pinned_restriction
  [49] copy_state             [11] init_pieces_attacks    [63] pixel_vers_case
   [3] create_tree_with_alpha_beta [31] is_attacked       [15] put_bishop_attacks
  [72] create_window          [33] king_attack            [20] put_rook_attacks
  [19] diagonal_attack        [59] knight_attack          [25] rank_attack
  [17] diagonal_xray_attack   [37] load_bishop_squares    [30] rank_xray_attack
  [66] draw_all_pieces        [70] load_magic_numbers      [7] reload_attacks
  [67] draw_board             [12] load_rook_squares      [10] reload_occupancy
  [55] draw_piece             [22] loop_condition         [41] rook_attack
  [28] file_attack            [21] maj_min_max            [36] rook_attack_on_board
  [35] file_xray_attack       [43] make_move              [13] set_occupancy
   [5] first_index            [60] malloc_bishop          [71] set_value
  [56] first_index            [45] malloc_game
   [8] first_index            [46] malloc_information
